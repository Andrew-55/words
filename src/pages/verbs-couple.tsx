import Head from "next/head";
import { useState } from "react";
import styled from "styled-components";

import { Layout } from "@/components";
import { MOCK_DATA } from "@/store/MOCK_DATA";
import { TYPOGRAPHY } from "@/styles";
import { ButtonWords } from "@/ui";
import { shuffleArray } from "@/utils/functions/logic-functions";

const verbsEnglish = MOCK_DATA.verbs.map((verb) => {
  return { id: verb.id, text: verb.infinitive };
});
const verbsRussian = MOCK_DATA.verbs.map((verb) => {
  return { id: verb.id, text: verb.translation };
});

const verbsEnglishRandom = shuffleArray(verbsEnglish);
const verbsRussianRandom = shuffleArray(verbsRussian);

export default function VerbsCouple() {
  const [currentId, setCurrentId] = useState("");
  const [countMistake, setCountMistake] = useState(0);

  const [verbsEnglishShow, setVerbsEnglishShow] = useState(verbsEnglishRandom);
  const [verbsRussianShow, setVerbsRussianShow] = useState(verbsRussianRandom);

  const handleClickButton = (id: string) => {
    if (!currentId) {
      setCurrentId(id);
      return;
    }
    if (!id) {
      setCurrentId("");
      return;
    }
    if (currentId === id) {
      const nowEnglishVerbs = verbsEnglishShow.filter((verb) => verb.id !== id);
      const nowRussianVerbs = verbsRussianShow.filter((verb) => verb.id !== id);

      setVerbsEnglishShow(nowEnglishVerbs);
      setVerbsRussianShow(nowRussianVerbs);
      setCurrentId("");
    }
    if (currentId !== id) {
      setCurrentId("");
      setCountMistake((prev) => prev + 1);
    }
  };

  return (
    <>
      <Head>
        <title>Verbs-Couple</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Root>
          <InfoBlock>
            <span>{`Осталось слов: ${verbsEnglishShow.length}`}</span>
            <span>{`Количество ошибок ${countMistake}`}</span>
          </InfoBlock>
          <WrapVerbs>
            <WrapButton>
              {verbsEnglishShow.map((verb) => (
                <ButtonWords
                  key={verb.id}
                  id={verb.id}
                  text={verb.text}
                  onClickButton={handleClickButton}
                />
              ))}
            </WrapButton>
            <WrapButton>
              {verbsRussianShow.map((verb) => (
                <ButtonWords
                  key={verb.id}
                  id={verb.id}
                  text={verb.text}
                  onClickButton={handleClickButton}
                />
              ))}
            </WrapButton>
          </WrapVerbs>
        </Root>
      </Layout>
    </>
  );
}

const Root = styled.main`
  width: 100%;
  position: relative;
  width: 100%;
  padding: 32px 86px;
`;

const WrapVerbs = styled.div`
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 50px;
`;

const WrapButton = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 15px;
`;

const InfoBlock = styled.div`
  ${TYPOGRAPHY.THICCCBOI_Medium_20px}
  margin-bottom: 20px;
  display: flex;
  column-gap: 50px;
`;
